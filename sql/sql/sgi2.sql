-- MySQL Script generated by MySQL Workbench
-- Mon Jun 26 20:10:39 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema sgi
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sgi` ;

-- -----------------------------------------------------
-- Schema sgi
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sgi` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`tsolicitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`tsolicitud` ;

CREATE TABLE IF NOT EXISTS `mydb`.`tsolicitud` (
  `id` INT NOT NULL COMMENT 'Campo clave de la tabla tsolicitud, Indice principal que no puede ser nulo y sin asignar.\n',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'nombre del tipo de solicitud',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sgi`.`departamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`departamento` ;

CREATE TABLE IF NOT EXISTS `sgi`.`departamento` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla departamento, Indice principal que no puede ser nulo y sin asignar.',
  `descripcion` VARCHAR(30) CHARACTER SET 'utf8' NOT NULL COMMENT 'Descripción de departamento',
  `observacion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NULL DEFAULT NULL COMMENT 'Observaciones  de departamento',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `descripcion_UNIQUE` ON `sgi`.`departamento` (`descripcion` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`usuario` ;

CREATE TABLE IF NOT EXISTS `sgi`.`usuario` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla usuario, Indice principal que no puede ser nulo y sin asignar.',
  `departamento_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id departamento, permite relacionar la tabla usuario con la tabla departamento a través de un Foreign key',
  `avatar` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NULL DEFAULT NULL COMMENT 'Foto o Icono representativo del usuario',
  `usuario` VARCHAR(20) CHARACTER SET 'utf8' NOT NULL COMMENT 'Nombre de usuario para acceder al sistema',
  `nombre` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NULL DEFAULT NULL COMMENT 'Nombre del usuario',
  `apellido` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NULL DEFAULT NULL COMMENT 'Apellido del usuario',
  `password` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL COMMENT 'Contraseña del usuario',
  `estado` TINYINT(3) UNSIGNED NOT NULL,
  `email` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NULL DEFAULT NULL COMMENT 'Correo electrónico del usuario',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `usuario_UNIQUE` ON `sgi`.`usuario` (`usuario` ASC);

CREATE INDEX `fk_usuario_departamento1` ON `sgi`.`usuario` (`departamento_id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Esolicitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Esolicitud` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Esolicitud` (
  `id` INT NOT NULL,
  `estado` VARCHAR(45) NOT NULL COMMENT 'Estado de la Solicitud',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`solicitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`solicitud` ;

CREATE TABLE IF NOT EXISTS `mydb`.`solicitud` (
  `id` INT NOT NULL COMMENT 'Campo clave de la tabla solicitud, Indice principal que no puede ser nulo y sin asignar.\n',
  `tsolicitud_id` INT NOT NULL,
  `usuario_id` INT(10) UNSIGNED NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL COMMENT 'Descripción de la solicitud',
  `Esolicitud_id` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE INDEX `fk_solicitud_tsolicitud_idx` ON `mydb`.`solicitud` (`tsolicitud_id` ASC);

CREATE INDEX `fk_solicitud_usuario1_idx` ON `mydb`.`solicitud` (`usuario_id` ASC);

CREATE INDEX `fk_solicitud_Esolicitud1_idx` ON `mydb`.`solicitud` (`Esolicitud_id` ASC);

USE `sgi` ;

-- -----------------------------------------------------
-- Table `sgi`.`estado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`estado` ;

CREATE TABLE IF NOT EXISTS `sgi`.`estado` (
  `id` INT(10) UNSIGNED NOT NULL,
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;


-- -----------------------------------------------------
-- Table `sgi`.`marca`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`marca` ;

CREATE TABLE IF NOT EXISTS `sgi`.`marca` (
  `id` INT(10) UNSIGNED NOT NULL,
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `descripcion_UNIQUE` ON `sgi`.`marca` (`descripcion` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`modelo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`modelo` ;

CREATE TABLE IF NOT EXISTS `sgi`.`modelo` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla modelo, Indice principal que no puede ser nulo y sin asignar.',
  `marca_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id Marca de la computadora, permite relacionar la tabla computadora con la tabla marca a través de un Foreign key',
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Descripción del modelo',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `descripcion_UNIQUE` ON `sgi`.`modelo` (`descripcion` ASC);

CREATE INDEX `fk_modelo_marca2_idx` ON `sgi`.`modelo` (`marca_id` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`sistema_operativo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`sistema_operativo` ;

CREATE TABLE IF NOT EXISTS `sgi`.`sistema_operativo` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla sistema_operativo, Indice principal que no puede ser nulo y sin asignar.',
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Descripción del sistema operativo',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;


-- -----------------------------------------------------
-- Table `sgi`.`tcomputadora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`tcomputadora` ;

CREATE TABLE IF NOT EXISTS `sgi`.`tcomputadora` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla tcomputadoras, Indice principal que no puede ser nulo y sin asignar.\n',
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Descripción del tipo de computadora',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;


-- -----------------------------------------------------
-- Table `sgi`.`procesador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`procesador` ;

CREATE TABLE IF NOT EXISTS `sgi`.`procesador` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla procesador, Indice principal que no puede ser nulo y sin asignar.\n',
  `marca_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id marca, permite relacionar la tabla procesador con la tabla marca a través de un Foreign key\n',
  `descripcion` VARCHAR(35) CHARACTER SET 'armscii8' NULL DEFAULT NULL COMMENT 'Descripción del Procesador',
  `procesadores_logicos` INT(11) NOT NULL COMMENT 'Numero de procesadores lógicos',
  `cores` INT(11) NOT NULL COMMENT 'Número de cores',
  `velocidad` VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Velocidad de los procesadores',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `cores_UNIQUE` ON `sgi`.`procesador` (`cores` ASC);

CREATE INDEX `fk_Procesador_marca1_idx` ON `sgi`.`procesador` (`marca_id` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`computadoras`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`computadoras` ;

CREATE TABLE IF NOT EXISTS `sgi`.`computadoras` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla Computadoras, Indice principal que no puede ser nulo y sin asignar.',
  `hostname` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Nombre de la computadora',
  `memoria_ram` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Memoria RAM de la Computadora',
  `capacidad_disco` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Capacidad de disco de la Computadora',
  `tcomputadora_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id Tipo de Computadora, permite relacionar la tabla computadora con la tabla tcomputadora a través de un Foreign key',
  `marca_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id Marca de la computadora, permite relacionar la tabla computadora con la tabla marca a través de un Foreign key',
  `modelo_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id Modelo de la Computadora, permite relacionar la tabla computadora con la tabla modelo a través de un Foreign key',
  `Procesador_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id de Procesador de la Computadora, permite relacionar la tabla computadora con la tabla procesador a través de un Foreign key',
  `sistema_operativo_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id  de Sistema Operativo de la Computadora, permite relacionar la tabla computadora con la tabla Sistema Operativo a través de un Foreign key',
  `usuario_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id Usuario asignado a la computadora, permite relacionar la tabla computadora con la tabla usuario a través de un Foreign key',
  `serial` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Serial de la Computadora',
  `estado_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id estado de la computadora, permite relacionar la tabla computadora con la tabla estado a través de un Foreign key',
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Observaciones de la Computadora',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sgi`.`computadoras` (`id` ASC);

CREATE INDEX `fk_dispositvo_Procesador1` ON `sgi`.`computadoras` (`Procesador_id` ASC);

CREATE INDEX `fk_computadoras_sistema_operativo1` ON `sgi`.`computadoras` (`sistema_operativo_id` ASC);

CREATE INDEX `fk_computadoras_marca1` ON `sgi`.`computadoras` (`marca_id` ASC);

CREATE INDEX `fk_computadoras_estado1` ON `sgi`.`computadoras` (`estado_id` ASC);

CREATE INDEX `fk_computadoras_tcomputadora1` ON `sgi`.`computadoras` (`tcomputadora_id` ASC);

CREATE INDEX `fk_computadoras_usuario1_idx` ON `sgi`.`computadoras` (`usuario_id` ASC);

CREATE INDEX `fk_computadoras_modelo1_idx` ON `sgi`.`computadoras` (`modelo_id` ASC);

CREATE UNIQUE INDEX `hostname_UNIQUE` ON `sgi`.`computadoras` (`hostname` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`direccion_ip`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`direccion_ip` ;

CREATE TABLE IF NOT EXISTS `sgi`.`direccion_ip` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla direccion_ip, Indice principal que no puede ser nulo y sin asignar.\n',
  `computadoras_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id computadora, permite relacionar la tabla direccion_ip con la tabla computadora  a través de un Foreign key\n',
  `direccion_ip` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'numero de direccion ip',
  `observaciones` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NULL DEFAULT NULL COMMENT 'Observaciones de la dirección IP',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE INDEX `fk_direccion_ip_computadoras1` ON `sgi`.`direccion_ip` (`computadoras_id` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`tipo_menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`tipo_menu` ;

CREATE TABLE IF NOT EXISTS `sgi`.`tipo_menu` (
  `id` INT(10) UNSIGNED NOT NULL,
  `descripcion` VARCHAR(30) CHARACTER SET 'utf8' NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `descripcion_UNIQUE` ON `sgi`.`tipo_menu` (`descripcion` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`menu` ;

CREATE TABLE IF NOT EXISTS `sgi`.`menu` (
  `id` INT(10) UNSIGNED NOT NULL,
  `menu_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `tipo_menu_id` INT(10) UNSIGNED NOT NULL,
  `etiqueta` VARCHAR(25) CHARACTER SET 'utf8' NOT NULL,
  `url` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL,
  `posicion` TINYINT(3) UNSIGNED NOT NULL DEFAULT '1',
  `icono` VARCHAR(35) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE INDEX `fk_menu_menu1` ON `sgi`.`menu` (`menu_id` ASC);

CREATE INDEX `fk_menu_tipo_menu1` ON `sgi`.`menu` (`tipo_menu_id` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`rol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`rol` ;

CREATE TABLE IF NOT EXISTS `sgi`.`rol` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla Computadoras, Indice principal que no puede ser nulo y sin asignar.',
  `descripcion` VARCHAR(20) CHARACTER SET 'utf8' NOT NULL COMMENT 'Descripción del Rol',
  `observacion` VARCHAR(200) CHARACTER SET 'utf8' NOT NULL COMMENT 'Observaciones del rol',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `descripcion_UNIQUE` ON `sgi`.`rol` (`descripcion` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`menu_rol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`menu_rol` ;

CREATE TABLE IF NOT EXISTS `sgi`.`menu_rol` (
  `id` INT(10) UNSIGNED NOT NULL,
  `menu_id` INT(10) UNSIGNED NOT NULL,
  `rol_id` INT(10) UNSIGNED NOT NULL,
  `estado` TINYINT(3) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE INDEX `fk_menu_rol_rol1` ON `sgi`.`menu_rol` (`rol_id` ASC);

CREATE INDEX `fk_menu_rol_menu1_idx` ON `sgi`.`menu_rol` (`menu_id` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`tperiferico`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`tperiferico` ;

CREATE TABLE IF NOT EXISTS `sgi`.`tperiferico` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla tperiferico, Indice principal que no puede ser nulo y sin asignar.\n',
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Descripción del tipo de periferico',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;


-- -----------------------------------------------------
-- Table `sgi`.`periferico`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`periferico` ;

CREATE TABLE IF NOT EXISTS `sgi`.`periferico` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla periferico, Indice principal que no puede ser nulo y sin asignar.',
  `nombre` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Nombre del periferico',
  `tipo_periferico_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id tipo de periferico, permite relacionar la tabla periferico con la tabla tperiferico a través de un Foreign key\n',
  `marca_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id marca del periferico, permite relacionar la tabla periferico con la tabla marca a través de un Foreign key',
  `modelo_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id modelo del periferico, permite relacionar la tabla periferico con la tabla modelo a través de un Foreign key',
  `serial` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL,
  `estado_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id estado del periferico, permite relacionar la tabla periferico con la tabla estado a través de un Foreign key',
  `usuario_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id usuario, permite relacionar la tabla periferico con la tabla usuario a través de un Foreign key',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `serial_UNIQUE` ON `sgi`.`periferico` (`serial` ASC);

CREATE INDEX `fk_periferico_tipo_periferico1` ON `sgi`.`periferico` (`tipo_periferico_id` ASC);

CREATE INDEX `fk_periferico_marca1` ON `sgi`.`periferico` (`marca_id` ASC);

CREATE INDEX `fk_periferico_estado1` ON `sgi`.`periferico` (`estado_id` ASC);

CREATE INDEX `fk_periferico_usuario1_idx` ON `sgi`.`periferico` (`usuario_id` ASC);

CREATE INDEX `fk_periferico_modelo1` ON `sgi`.`periferico` (`modelo_id` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`permiso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`permiso` ;

CREATE TABLE IF NOT EXISTS `sgi`.`permiso` (
  `id` INT(10) UNSIGNED NOT NULL,
  `nombre` VARCHAR(50) CHARACTER SET 'utf8' NOT NULL,
  `nombre_a_mostrar` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,
  `observacion` VARCHAR(200) CHARACTER SET 'utf8' NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL,
  `created_by` INT(11) NOT NULL,
  `updated_by` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `nombre_UNIQUE` ON `sgi`.`permiso` (`nombre` ASC);

CREATE UNIQUE INDEX `nombre_a_mostrar_UNIQUE` ON `sgi`.`permiso` (`nombre_a_mostrar` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`permiso_rol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`permiso_rol` ;

CREATE TABLE IF NOT EXISTS `sgi`.`permiso_rol` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla permiso_rol, Indice principal que no puede ser nulo y sin asignar.\n',
  `permiso_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id permiso, permite relacionar la tabla permiso_rol con la tabla permiso a través de un Foreign key\n',
  `rol_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id rol, permite relacionar la tabla permiso_rol con la tabla rol a través de un Foreign key\n',
  `estado` TINYINT(3) UNSIGNED NOT NULL COMMENT 'Estado de Permiso Rol',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE INDEX `fk_permiso_rol_rol1` ON `sgi`.`permiso_rol` (`rol_id` ASC);

CREATE INDEX `fk_rolo_permiso_permisos1_idx` ON `sgi`.`permiso_rol` (`permiso_id` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`tred`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`tred` ;

CREATE TABLE IF NOT EXISTS `sgi`.`tred` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla tred, Indice principal que no puede ser nulo y sin asignar.\n',
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Descripción del tipo de red',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;


-- -----------------------------------------------------
-- Table `sgi`.`red`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`red` ;

CREATE TABLE IF NOT EXISTS `sgi`.`red` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla red, Indice principal que no puede ser nulo y sin asignar.\n',
  `hostname` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Nombre del dispositivo de red',
  `descripcion` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Descripción del dispositivo de red',
  `tred_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id Tipo de red, permite relacionar la tabla red con la tabla tred a través de un Foreign key',
  `serial` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_spanish2_ci' NOT NULL COMMENT 'Serial del dispositivo de red',
  `marca_id_marca` INT(10) UNSIGNED NOT NULL COMMENT 'Id marca, permite relacionar la tabla red con la tabla marca a través de un Foreign key',
  `modelo_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id modelo, permite relacionar la tabla red con la tabla modelo a través de un Foreign key',
  `usuario_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id usuario, permite relacionar la tabla red con la tabla usuario a través de un Foreign key',
  `estado_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id estado, permite relacionar la tabla red con la tabla estado a través de un Foreign key',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sgi`.`red` (`id` ASC);

CREATE UNIQUE INDEX `serial_UNIQUE` ON `sgi`.`red` (`serial` ASC);

CREATE INDEX `fk_Redes_marca1` ON `sgi`.`red` (`marca_id_marca` ASC);

CREATE INDEX `fk_Red_tred1` ON `sgi`.`red` (`tred_id` ASC);

CREATE INDEX `fk_Red_estado1` ON `sgi`.`red` (`estado_id` ASC);

CREATE INDEX `fk_Red_usuario1_idx` ON `sgi`.`red` (`usuario_id` ASC);

CREATE INDEX `fk_Red_modelo1_idx` ON `sgi`.`red` (`modelo_id` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`sgi_session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`sgi_session` ;

CREATE TABLE IF NOT EXISTS `sgi`.`sgi_session` (
  `id` VARCHAR(40) NOT NULL,
  `ip_address` VARCHAR(45) NOT NULL,
  `timestamp` INT(10) UNSIGNED NOT NULL DEFAULT '0',
  `data` BLOB NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE INDEX `sgi_sessions_timestamp` ON `sgi`.`sgi_session` (`timestamp` ASC);


-- -----------------------------------------------------
-- Table `sgi`.`usuario_rol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sgi`.`usuario_rol` ;

CREATE TABLE IF NOT EXISTS `sgi`.`usuario_rol` (
  `id` INT(10) UNSIGNED NOT NULL COMMENT 'Campo clave de la tabla usuario_rol, Indice principal que no puede ser nulo y sin asignar.\n',
  `usuario_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id usuario, permite relacionar la tabla usuario_rol con la tabla usuario a través de un Foreign key',
  `rol_id` INT(10) UNSIGNED NOT NULL COMMENT 'Id rol, permite relacionar la tabla usuario_rol con la tabla rol a través de un Foreign key',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_at` DATETIME NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `created_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  `updated_by` INT(10) UNSIGNED NOT NULL COMMENT 'Campo de auditoria que permite realizar el seguimiento de los registros',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci;

CREATE INDEX `fk_usuario_rol_usuario` ON `sgi`.`usuario_rol` (`usuario_id` ASC);

CREATE INDEX `fk_usuario_rol_rol_idx` ON `sgi`.`usuario_rol` (`rol_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
